{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91947\\\\Documents\\\\Awadh Technology\\\\Services\\\\seller\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [userData, setUserData] = useState('');\n\n  const getUserContact = async () => {\n    try {\n      const res = await fetch('/getdata', {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      setUserData({ ...userData,\n        name: data.name,\n        email: data.email\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getUserContact();\n  }, []); //  We are storing data in states\n\n  const handleInput = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setUserData({ ...userData,\n      [name]: value\n    });\n  }; // Send the data to backend\n\n\n  const submitData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      message\n    } = userData;\n    const res = await fetch('/contact', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        message\n      })\n    });\n    const data = await res.json();\n\n    if (!data) {\n      console.log(\"Message not sent\");\n    } else {\n      alert(\"Message Sent\");\n      setUserData({ ...userData,\n        message: \"\"\n      }); // Make message field empty again\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      method: \"POST\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: userData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"tgc/+7Id2Rx92uWHdDhMbDR55/s=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/91947/Documents/Awadh Technology/Services/seller/src/components/Dashboard.js"],"names":["React","useEffect","useState","Dashboard","userData","setUserData","getUserContact","res","fetch","method","headers","data","json","console","log","name","email","err","handleInput","event","target","value","submitData","e","preventDefault","message","body","JSON","stringify","alert","show"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMI,cAAc,GAAG,YAAY;AAC/B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAD,EAAa;AAChCC,QAAAA,MAAM,EAAE,KADwB;AAEhCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFuB,OAAb,CAAvB;AAOA,YAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,MAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERW,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFH;AAGRC,QAAAA,KAAK,EAAEL,IAAI,CAACK;AAHJ,OAAD,CAAX;AAMH,KAhBD,CAgBE,OAAOC,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH;AACJ,GApBD;;AAsBAhB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT,CAzBoB,CA6BpB;;AACA,QAAMY,WAAW,GAAIC,KAAD,IAAW;AAC3B,UAAMJ,IAAI,GAAGI,KAAK,CAACC,MAAN,CAAaL,IAA1B;AACA,UAAMM,KAAK,GAAEF,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAEAhB,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACW,IAAD,GAAOM;AAAtB,KAAD,CAAX;AACH,GALD,CA9BoB,CAqCpB;;;AACA,QAAMC,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAM;AAACT,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcS,MAAAA;AAAd,QAAyBrB,QAA/B;AAEA,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAD,EAAa;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuB;AAKhCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,QAAAA,IADiB;AACXC,QAAAA,KADW;AACJS,QAAAA;AADI,OAAf;AAL0B,KAAb,CAAvB;AAUA,UAAMd,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AAEA,QAAI,CAACD,IAAL,EAAW;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,KAFD,MAEO;AACHe,MAAAA,KAAK,CAAC,cAAD,CAAL;AACAxB,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeqB,QAAAA,OAAO,EAAE;AAAxB,OAAD,CAAX,CAFG,CAEsC;AAC5C;AACJ,GAvBD;;AAyBA,sBACI;AAAA,4BACI;AAAI,MAAA,MAAM,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAA,gBAAKrB,QAAQ,CAACW;AAAd;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ;AAAA,gBAAMe;AAAN;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtED;;GAAM3B,S;;KAAAA,S;AAwEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Dashboard = () => {    \r\n    const [userData, setUserData] = useState('')\r\n\r\n    const getUserContact = async () => {\r\n        try {\r\n            const res = await fetch('/getdata', {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            const data = await res.json()\r\n            console.log(data);\r\n            setUserData({\r\n                ...userData,\r\n                name: data.name,\r\n                email: data.email,\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserContact()\r\n    }, [])\r\n\r\n    //  We are storing data in states\r\n    const handleInput = (event) => {\r\n        const name = event.target.name\r\n        const value= event.target.value\r\n\r\n        setUserData({ ...userData, [name]:value})\r\n    }\r\n\r\n    // Send the data to backend\r\n    const submitData = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const {name, email, message} = userData\r\n\r\n        const res = await fetch('/contact', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name, email, message\r\n            })\r\n        })\r\n\r\n        const data = await res.json()\r\n\r\n        if (!data) {\r\n            console.log(\"Message not sent\");\r\n        } else {\r\n            alert(\"Message Sent\")\r\n            setUserData({ ...userData, message: \"\"}) // Make message field empty again\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 method=\"POST\">Dashboard</h1>\r\n                <h5>{userData.name}</h5>\r\n                <h5>{ show }</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}