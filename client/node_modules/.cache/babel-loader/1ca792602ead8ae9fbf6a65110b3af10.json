{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91947\\\\Documents\\\\Awadh Technology\\\\Services\\\\seller\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // using Use State Hooks\n\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cpassword: \"\"\n  });\n  let name, value;\n\n  const handleInputs = element => {\n    name = element.target.name;\n    value = element.target.value;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      cpassword\n    } = user;\n    console.log(name);\n    const res = await fetch('/register', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        cpassword\n      })\n    });\n    const data = await res.json();\n\n    if (data.status === 422 || !data) {\n      window.alert(\"Invalid Registration\");\n      console.log(\"Invalid Registration\");\n    } else {\n      window.alert(\"Registration Successful\");\n      console.log(\"Registration Successful\");\n      navigate(\"../login\", {\n        replace: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"register\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: user.name,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this), \"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: user.email,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: user.password,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this), \"Confirm Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"cpassword\",\n        value: user.cpassword,\n        onChange: handleInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: PostData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"INmF4e0PFt/WzB641GfTlhYK/Hk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/91947/Documents/Awadh Technology/Services/seller/src/components/Login.js"],"names":["React","useState","useNavigate","Register","navigate","user","setUser","name","email","password","cpassword","value","handleInputs","element","target","PostData","e","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert","replace"],"mappings":"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","sourcesContent":["import React, { useState } from 'react' // using Use State Hooks\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate()\r\n    const [user, setUser] = useState({\r\n        name: \"\", email: \"\", password: \"\", cpassword: \"\"\r\n    })\r\n\r\n    let name, value\r\n    const handleInputs = (element) => {\r\n        name = element.target.name\r\n        value = element.target.value\r\n\r\n        setUser({ ...user, [name]: value })\r\n    }\r\n\r\n    const PostData = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, email, password, cpassword } = user\r\n        console.log(name);\r\n\r\n        const res = await fetch('/register', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name, email, password, cpassword\r\n            })\r\n        })\r\n\r\n        const data = await res.json()\r\n\r\n        if(data.status === 422 || !data){\r\n            window.alert(\"Invalid Registration\")\r\n            console.log(\"Invalid Registration\");\r\n        }\r\n        else{\r\n            window.alert(\"Registration Successful\")\r\n            console.log(\"Registration Successful\")\r\n\r\n            navigate(\"../login\", { replace: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='register'>Register</h1>\r\n            <form method=\"post\">\r\n                Name: <input type=\"text\" name='name' value={user.name} onChange={handleInputs}></input>\r\n                Email: <input type=\"text\" name='email' value={user.email} onChange={handleInputs}></input>\r\n                Password: <input type=\"text\" name='password' value={user.password} onChange={handleInputs}></input>\r\n                Confirm Password: <input type=\"text\" name='cpassword' value={user.cpassword} onChange={handleInputs}></input>\r\n                <button type=\"submit\" onClick={PostData}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}